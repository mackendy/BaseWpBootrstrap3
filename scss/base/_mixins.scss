@mixin transform-translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -o-transform: translate3d($x, $y, $z);
  -ms-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin transform-rotate3d($x, $y, $z, $a) {
  -webkit-transform: rotate3d($x, $y, $z, $a);
  -moz-transform: rotate3d($x, $y, $z, $a);
  -o-transform: rotate3d($x, $y, $z, $a);
  -ms-transform: rotate3d($x, $y, $z, $a);
  transform: rotate3d($x, $y, $z, $a);
}

@mixin transform-origin($x, $y) {
  -webkit-transform-origin: $x $y;
  -moz-transform-origin: $x $y;
  -o-transform-origin: $x $y;
  -ms-transform-origin: $x $y;
  transform-origin: $x $y;
}

@mixin transform-scale($scale) {
  -webkit-transform: scale($scale);
  -moz-transform: scale($scale);
  -o-transform: scale($scale);
  -ms-transform: scale($scale);
  transform: scale($scale);
}

@mixin transition-transform($duration) {
  -webkit-transition: -webkit-transform $duration;
  -moz-transition: -moz-transform $duration;
  -o-transition: -o-transform $duration;
  transition: -ms-transform $duration;
  transition: transform $duration;
}

@mixin transition-color($duration) {
  -webkit-transition: color $duration;
  -moz-transition: color $duration;
  -o-transition: color $duration;
  transition: color $duration;
}

@mixin transition-opacity($duration) {
  -webkit-transition: opacity $duration;
  -moz-transition: opacity $duration;
  -o-transition: opacity $duration;
  transition: opacity $duration;
}


@mixin transition($transition-property: all, $transition-time: 1s, $method: ease) { //implied defaults
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition:    $transition-property $transition-time $method;
  -ms-transition:     $transition-property $transition-time $method;
  -o-transition:      $transition-property $transition-time $method;
  transition:         $transition-property $transition-time $method;
}


@mixin border-radius($radius: 0) {
  -webkit-border-radius: $radius;
  -moz-border-radius:    $radius;
  border-radius:         $radius;
}



@mixin link-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {
  color: $normal;
  @if $visited {
    &:visited {
      color: $visited;
    }
  }
  @if $focus {
    &:focus {
      color: $focus;
    }
  }
  @if $hover {
    &:hover {
      color: $hover;
    }
  }
  @if $active {
    &:active {
      color: $active;
    }
  }
}

@mixin hover-link {
  text-decoration: none;
  &:hover, &:focus {
    text-decoration: none;
  }
}

@mixin box-sizing($box-model: $default-box-sizing) {
  $box-model: unquote($box-model);
  @include prefixed-properties(css3-boxsizing, $box-sizing-support-threshold, (box-sizing: $box-model));
}

@mixin prefixed-properties($capability, $threshold, $properties, $capability-options: $default-capability-options) {
  @include with-each-prefix($capability, $threshold, $capability-options) {
    @each $prop, $value in $properties {
      @include prefix-prop($prop, $value);
    }
  }
}